{"version":3,"sources":["assets/images/cytoscape-logo.svg","components/SearchPanel/index.jsx","components/InputList/index.jsx","components/LoadingPanel/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/Hits/index.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/NetworkList.jsx","components/Results/Ndex/index.jsx","components/Results/index.jsx","components/HomePanel/TitleBar.jsx","components/SettingsPanel/index.jsx","components/HomePanel/index.jsx","actions/search.js","actions/uiState.js","containers/MainContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","actions/applications.js","reducers/uiState.js","reducers/applications.js","reducers/index.js","api/ndex.js","api/mygene.js","sagas/ndexSaga.js","index.js"],"names":["module","exports","__webpack_require__","p","EXAMPLES","withStyles","theme","button","marginLeft","props","classes","handleExample","exampleIdx","searchActions","setQuery","react_default","a","createElement","className","TextField_default","id","label","multiline","rows","fullWidth","autoFocus","margin","variant","value","search","queryGenes","onChange","event","textData","target","Tooltip_default","title","placement","Button_default","color","size","onClick","clearQuery","Delete_default","Settings_default","clearAll","Refresh_default","genes","searchStarted","Search_default","MAX_DESCRIPTION_LENGTH","GENE_CARDS_URL","InputList","state","handleClick","console","log","tag","curState","_this","undefined","setState","Object","defineProperty","getListItem","geneEntry","description","summary","length","substring","Fragment","ListItem_default","alignItems","key","_id","e","ListItemAvatar_default","Avatar_default","matched","ListItemText_default","primary","symbol","secondary","Typography_default","component","inline","name","ListItemSecondaryAction_default","linkIcon","IconButton_default","aria-label","href","Launch_default","ExpandLess_default","ExpandMore_default","getListChildren","entry","pathway","pathwaySources","keys","Collapse_default","in","getPathwayStateTag","timeout","unmountOnExit","List_default","disablePadding","map","dbName","pathways","Array","isArray","pwEntry","nested","ListItemIcon_default","Info_default","inset","getNotFound","notFound","Divider_default","getUnmatchedListItem","Error_default","_this2","this","results","geneList","values","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","push","err","return","React","Component","display","marginTop","backgroundColor","unmatched","paddingLeft","spacing","unit","LoadingPanel","CircularProgress_default","InputPanel","components_SearchPanel","isSearching","components_LoadingPanel","components_InputList","Empty","src","logo","index_es","dummyServices","hits","tiles","flexWrap","justifyContent","overflow","card","height","padding","gridList","transform","palette","light","titleBar","root","GridList_default","cols","tile","GridListTile_default","Paper_default","GridListTileBar_default","actionIcon","StarBorder_default","toolbar","background","grow","flexGrow","menuButton","marginRight","breakpoints","up","position","borderRadius","shape","fade","common","white","&:hover","width","searchIcon","pointerEvents","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","transition","transitions","create","&:focus","Toolbar_default","Menu_default","noWrap","InputBase_default","placeholder","input","OpenInNew_default","NetworkViewer","Ndex_NetworkToolbar","NetworkView","react_split_es","sizes","direction","gutterSize","Ndex_NetworkViewer","MenuItem_default","menuItem","externalId","networkAvatar","menuText","nodeCount","edgeCount","subtitle","deepOrange","& $primary, & $icon","ndexResults","networkList","networks","MenuList_default","Ndex","Ndex_NetworkList","ndex","Ndex_NetworkView","Results","handleChange","Results_Empty","Tabs_default","Tab_default","numFound","Results_Ndex","tabs","TitleBar","handleMenu","uiStateActions","setSettingsOpen","uiState","isSettingsOpen","open","AppBar_default","classNames","appBar","appBarShift","disableGutters","hide","aria-owns","aria-haspopup","AccountCircle_default","Help_default","easing","sharp","duration","leavingScreen","concat","easeOut","enteringScreen","withTheme","SettingsPanel","handleDrawerClose","isOpen","_this$props","Drawer_default","drawer","anchor","paper","drawerPaper","ChevronLeft_default","ChevronRight_default","text","index","MoveToInbox_default","Mail_default","flexShrink","drawerHeader","objectSpread","mixins","content","contentShift","CssBaseline_default","HomePanel_TitleBar","components_SettingsPanel","components_InputPanel","assign","components_Results","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","CLEAR_ALL","createAction","searchSucceeded","searchFailed","SET_SETTINGS_OPEN","connect","dispatch","bindActionCreators","components_HomePanel","App","containers_MainContainer","Boolean","window","location","hostname","match","handleActions","_handleActions","payload","queryList","split","addApplication","removeApplication","applications_handleActions","applications","remove","rootReducer","combineReducers","searchNetwork","query","body","JSON","stringify","searchString","searchUrl","NDEX_BASE_URL","fetch","method","headers","Accept","Content-Type","searchGenes","MYGENE_BASE_URL","rootSaga","watchSearch","regenerator_default","wrap","_context","prev","takeLatest","stop","_marked","action","geneRes","geneJson","res","json","filtered","_context2","call","myGeneApi","join","sent","api","filterGenes","put","type","uniqueGeneMap","t0","warn","message","error","_marked2","resultList","Map","len","notfound","set","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","render","_ref","es","BrowserRouter","Route","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17b9201c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport './style.css'\n\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport SearchIcon from '@material-ui/icons/Search'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nconst EXAMPLES = ['kras egfr cdk4 tp53', 'per1 per2 clock', 'mtor wnt1 igf1']\n\nconst styles = theme => ({\n  button: {\n    marginLeft: '0.5em'\n  }\n})\n\nconst SearchPanel = props => {\n  const { classes } = props\n\n  const handleSet = event => {\n    const textData = event.target.value\n    props.searchActions.setQuery(textData)\n  }\n\n  const handleClear = event => {\n    props.searchActions.clearQuery()\n  }\n\n  const handleStartOver = event => {\n    props.searchActions.clearAll()\n  }\n\n  const handleSearch = event => {\n    const genes = props.search.queryGenes\n    props.searchActions.searchStarted(genes)\n  }\n\n  const handleExample = exampleIdx => {\n    props.searchActions.setQuery(EXAMPLES[exampleIdx])\n  }\n\n  return (\n    <div className=\"search\">\n      <TextField\n        id=\"gene-list\"\n        label=\"Enter a gene list (e.g. TP53)\"\n        multiline\n        rows=\"5\"\n        fullWidth\n        autoFocus={true}\n        margin=\"normal\"\n        variant=\"outlined\"\n        value={props.search.queryGenes}\n        onChange={handleSet}\n      />\n\n      <div className=\"buttons\">\n        <Tooltip title=\"Clear list\" placement=\"bottom\">\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </Button>\n        </Tooltip>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          size=\"small\"\n          onClick={event => handleExample(0)}\n        >\n          Ex 1\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          size=\"small\"\n          onClick={event => handleExample(1)}\n        >\n          Ex 2\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          size=\"small\"\n          onClick={event => handleExample(2)}\n        >\n          Ex 3\n        </Button>\n      </div>\n\n      <div className=\"buttons\">\n        <Tooltip title=\"Advanced options\" placement=\"bottom\">\n          <Button className={classes.button} variant=\"contained\" size=\"large\">\n            <SettingsIcon />\n          </Button>\n        </Tooltip>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          size=\"large\"\n          color=\"secondary\"\n          onClick={handleStartOver}\n        >\n          <RefreshIcon />\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={handleSearch}\n        >\n          <SearchIcon />\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(SearchPanel)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\n\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\n\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport './style.css'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\n\nconst MAX_DESCRIPTION_LENGTH = 150\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: 'teal'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass InputList extends React.Component {\n  state = {}\n\n  componentDidMount() {}\n\n  handleClick = id => {\n    console.log('OPEN = = = ', id)\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    console.log('STTTTT,', this.state)\n    const { classes } = this.props\n\n    const results = this.props.search.results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n    const notFound = results.notFound\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const values = []\n    for (let value of geneList.values()) {\n      values.push(value)\n    }\n    return (\n      <div className=\"gene-list-wrapper\">\n        <Typography variant=\"h6\">Search Result</Typography>\n        <Typography variant=\"body1\">\n          {'Matched Genes: ' + values.length + ''}\n        </Typography>\n\n        <div className=\"gene-list\">\n          <List>{values.map(entry => this.getListItem(entry, classes))}</List>\n        </div>\n\n        {notFound.length !== 0 ? this.getNotFound(notFound, classes) : null}\n      </div>\n    )\n  }\n\n  getListItem = (geneEntry, classes) => {\n    let description = geneEntry.summary\n    if (description.length > MAX_DESCRIPTION_LENGTH) {\n      description = description.substring(0, MAX_DESCRIPTION_LENGTH - 1) + '...'\n    }\n    return (\n      <React.Fragment>\n        <ListItem\n          alignItems=\"flex-start\"\n          key={geneEntry._id}\n          button\n          onClick={e => this.handleClick(geneEntry._id)}\n        >\n          <ListItemAvatar>\n            <Avatar className={classes.matched}>G</Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={geneEntry.symbol}\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  className={classes.inline}\n                  color=\"textPrimary\"\n                >\n                  {geneEntry.name}\n                </Typography>\n                <Typography variant=\"caption\">{description}</Typography>\n              </React.Fragment>\n            }\n          />\n          <ListItemSecondaryAction className={classes.linkIcon}>\n            <IconButton\n              aria-label=\"Link to GeneCards\"\n              href={GENE_CARDS_URL + geneEntry.symbol}\n              target=\"_blank\"\n            >\n              <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n                <LinkIcon />\n              </Tooltip>\n            </IconButton>\n          </ListItemSecondaryAction>\n          {this.state['pw_' + geneEntry._id] ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        {this.getListChildren(geneEntry, classes)}\n      </React.Fragment>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    console.log('PW===', pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(InputList)\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport SearchPanel from '../SearchPanel'\nimport InputList from '../InputList'\nimport LoadingPanel from '../LoadingPanel'\nimport './style.css'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <SearchPanel {...props} />\n      {props.search.isSearching ? <LoadingPanel /> : <InputList {...props} />}\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport { Typography } from '@material-ui/core'\nimport logo from '../../assets/images/cytoscape-logo.svg'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <img src={logo} className=\"home-logo\" />\n      <Typography variant=\"h2\">Cytoscape Cloud &alpha;</Typography>\n      <Typography variant=\"subtitle1\">\n        Enter / drag & drop a gene list to the text area\n      </Typography>\n\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\n\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nconst dummyServices = [\n  {\n    name: 'Enrichment',\n    title: 'Pathway Enrichment',\n    hits: 10\n  },\n  {\n    name: 'Interactome',\n    title: 'Interactome search',\n    hits: 20\n  },\n  {\n    name: 'NDEx',\n    title: 'NDEx network search',\n    hits: 30\n  }\n]\n\nconst styles = theme => ({\n  tiles: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: '#AAAAAA'\n  },\n  card: {\n    height: '10em',\n    padding: '0.5em'\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)'\n  },\n  title: {\n    color: theme.palette.primary.light\n  },\n  titleBar: {\n  }\n})\n\nconst Hits = props => {\n  const { classes } = props\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h5\">Hits:</Typography>\n\n      <div className={classes.tiles}>\n        <GridList className={classes.gridList} cols={2.5}>\n          {dummyServices.map(tile => (\n            <GridListTile key={tile.name}>\n              <Paper className={classes.card}>\n                <Typography variant=\"h5\" component=\"h3\">\n                  This is a sheet of paper.\n                </Typography>\n                <Typography component=\"p\">\n                  Paper can be used to build surface or other elements for your\n                  application.\n                </Typography>\n              </Paper>\n\n              <GridListTileBar\n                title={tile.title}\n                classes={{\n                  root: classes.titleBar,\n                  title: classes.title\n                }}\n                actionIcon={\n                  <IconButton>\n                    <StarBorderIcon className={classes.title} />\n                  </IconButton>\n                }\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n    </div>\n  )\n}\n\nHits.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Hits)\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport InputBase from '@material-ui/core/InputBase'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport OpenIcon from '@material-ui/icons/OpenInNew'\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes } = props\n  return (\n    <Toolbar className={classes.toolbar}>\n      <IconButton\n        className={classes.menuButton}\n        color=\"primary\"\n        aria-label=\"Open drawer\"\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n        Network title will be here...\n      </Typography>\n      <div className={classes.grow} />\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder=\"Search…\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput\n          }}\n        />\n      </div>\n      <IconButton color=\"inherit\" aria-label=\"Open in Cytoscape\">\n        <OpenIcon />\n      </IconButton>\n    </Toolbar>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React from 'react'\nimport './style.css'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n    <NetworkToolbar />\n  </div>\n)\n\nexport default NetworkViewer\n","import React from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => (\n  <Split sizes={[70, 30]} direction=\"vertical\" gutterSize={6}>\n    <NetworkViewer {...props} />\n    <div className=\"property-view\" />\n  </Split>\n)\n\nexport default NetworkView\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\n\nimport deepOrange from '@material-ui/core/colors/deepOrange'\n\nimport MenuList from '@material-ui/core/MenuList'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport './style.css'\n\nconst NDEX_LINK_URL = 'http://www.ndexbio.org/#/network/'\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: deepOrange[500]\n  },\n  menuItem: {\n    height: '4em',\n    '&:focus': {\n      backgroundColor: theme.palette.primary.light,\n      '& $primary, & $icon': {\n        color: theme.palette.common.white\n      }\n    }\n  },\n  menuText: {\n    '&:focus': {\n      '& $primary, & $icon': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n})\n\nconst NetworkList = props => {\n  const { classes } = props\n  const results = props.ndexResults\n\n  if (!results) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  const networkList = results.networks\n  if (!networkList) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  return (\n    <div className=\"network-list-wrapper\">\n      <div className=\"network-list\">\n        <MenuList>\n          {networkList.map(entry => getListItem(entry, classes))}\n        </MenuList>\n      </div>\n    </div>\n  )\n}\n\nconst getListItem = (geneEntry, classes) => {\n  return (\n    <MenuItem\n      className={classes.menuItem}\n      alignItems=\"flex-start\"\n      key={geneEntry.externalId}\n    >\n      <ListItemAvatar>\n        <Avatar className={classes.networkAvatar}>N</Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        className={classes.menuText}\n        primary={geneEntry.name}\n        secondary={\n          <React.Fragment>\n            <Typography\n              component=\"span\"\n              className={classes.inline}\n              color=\"textPrimary\"\n            >\n              {'Nodes: ' +\n                geneEntry.nodeCount +\n                ', Edges: ' +\n                geneEntry.edgeCount}\n            </Typography>\n            <Typography variant=\"caption\">\n              {'UUID: ' + geneEntry.externalId}\n            </Typography>\n          </React.Fragment>\n        }\n      />\n      <ListItemSecondaryAction>\n        <Tooltip title=\"Open in NDEx\" placement=\"bottom\">\n          <IconButton\n            href={NDEX_LINK_URL + geneEntry.externalId}\n            target={'_blank'}\n            aria-label=\"Open in NDEx\"\n          >\n            <LinkIcon />\n          </IconButton>\n        </Tooltip>\n      </ListItemSecondaryAction>\n    </MenuItem>\n  )\n}\n\nexport default withStyles(styles)(NetworkList)\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => (\n  <Split sizes={[40, 60]} gutterSize={7} className=\"ndex-base\">\n    <NetworkList ndexResults={props.search.results.ndex} />\n    <NetworkView {...props} />\n  </Split>\n)\n\nexport default Ndex\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport Empty from './Empty'\nimport Hits from '../Hits'\nimport Ndex from './Ndex'\n\nconst styles = theme => ({\n  tabs: {\n    width: '100%',\n    backgroundColor: '#FFFFFF'\n  }\n})\n\nclass Results extends React.Component {\n  state = {\n    value: 0\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { value } = this.state\n\n    const searchResult = this.props.search.results\n\n    // Display message panel if no result is available\n    if (searchResult === null) {\n      return <Empty />\n    }\n\n    return (\n      <div className=\"results-container\">\n        <div className=\"results-wrapper\">\n          <Tabs\n            value={value}\n            onChange={this.handleChange}\n          >\n            <Tab\n              label={'NDEx (' + this.props.search.results.ndex.numFound + ')'}\n            />\n            <Tab label=\"Enrichment (22)\" />\n            <Tab label=\"Interactome (102)\" />\n          </Tabs>\n          {value === 0 && <Ndex {...this.props} />}\n          {value === 1 && <h2>Enrichment</h2>}\n          {value === 2 && <h2>Interactome</h2>}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Results)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport HelpIcon from '@material-ui/icons/Help'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport classNames from 'classnames'\nimport logo from '../../assets/images/cytoscape-logo.svg'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  logo: {\n    height: '2.5em',\n    marginRight: '0.7em'\n  }\n})\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  render() {\n    const { classes } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <IconButton\n            className={classNames(classes.menuButton, open && classes.hide)}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={this.handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n          <img src={logo} className={classes.logo} />\n          <Typography variant=\"h5\" color=\"inherit\" className={classes.grow}>\n            Cytoscape Cloud &alpha;\n          </Typography>\n          <div>\n            <IconButton\n              aria-owns={open ? 'menu-appbar' : undefined}\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n            <IconButton\n              aria-owns={open ? 'menu-appbar' : undefined}\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n            >\n              <HelpIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(TitleBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport MailIcon from '@material-ui/icons/Mail'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport HelpIcon from '@material-ui/icons/Help'\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['This', 'panel is', 'for advanced', 'options'].map(\n            (text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            )\n          )}\n        </List>\n        <Divider />\n        <List>\n          {['More options', 'Help', '??'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <SettingIcon /> : <HelpIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(SettingsPanel)\n","import React from 'react'\nimport './style.css'\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport classNames from 'classnames'\nimport { AppBar, Toolbar } from \"@material-ui/core\";\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin'\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst HomePanel = props => {\n  const { classes, theme } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...props} />\n      <SettingsPanel {...props} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      >\n\n        <div className=\"container\">\n          <InputPanel className=\"input\" {...props} />\n          <Results className=\"results\" {...props} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(HomePanel)\n","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\n\n","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport HomePanel from '../../components/HomePanel'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\n\nconst MainContainer = props => <HomePanel {...props} />\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainContainer)\n","import React from 'react'\nimport MainContainer from './containers/MainContainer'\n\nconst App = props => <MainContainer {...props} />\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions, combineActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll\n} from '../actions/search'\n\nconst defaultState = {\n  isSearching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null\n}\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [], results: null }\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    }\n  },\n  defaultState\n)\n\nexport default search\n","import { createAction } from 'redux-actions'\n\nexport const ADD_APPLICATION = 'ADD_APPLICATION'\nexport const REMOVE_APPLICATION = 'REMOVE_APPLICATION'\n\nexport const addApplication = createAction(ADD_APPLICATION)\nexport const removeApplication = createAction(REMOVE_APPLICATION)\n","import { handleActions } from 'redux-actions'\nimport { setSettingsOpen } from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    }\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions, combineActions } from 'redux-actions'\nimport { addApplication, removeApplication } from '../actions/applications'\n\nconst defaultState = {\n  applications: ['hiview', 'naga'] // Gene list\n}\n\nconst applications = handleActions(\n  {\n    [addApplication]: (state, payload) => {\n      console.log('SET;', payload)\n      return {\n        ...state,\n        applications: state.applications.push(payload.payload)\n      }\n    },\n    [removeApplication]: (state, payload) => {\n      return {\n        ...state,\n        applications: state.applications.remove(payload.payload)\n      }\n    }\n  },\n  defaultState\n)\n\nexport default applications\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport applications from './applications'\nimport uiState from './uiState'\n\nconst rootReducer = combineReducers({ search, uiState })\n\nexport default rootReducer\n","const NDEX_BASE_URL = 'http://public.ndexbio.org/v2/'\n\nconst METHOD_POST = 'POST'\n\nconst searchNetwork = query => {\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  }\n  const body = JSON.stringify({\n    searchString: query\n  })\n  const searchUrl = NDEX_BASE_URL + 'search/network'\n\n  console.log('Calling NDEx API:', query, body, searchUrl)\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers,\n    body\n  })\n}\n\nexport { searchNetwork }\n","const MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\nconst METHOD_POST = 'POST'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const headers = {\n  }\n\n  // const geneQuery = geneList.join()\n\n  const fields = 'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl = MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  console.log('Calling MyGene API:', searchUrl)\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED\n} from '../actions/search'\n\nexport default function* rootSaga() {\n  console.log('rootSaga reporting for duty')\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n}\n\n/**\n * Calling NDEx network search and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const query = action.payload\n  try {\n    const geneRes = yield call(myGeneApi.searchGenes, query.split(' ').join())\n    const geneJson = yield call([geneRes, 'json'])\n    const res = yield call(api.searchNetwork, query)\n    const json = yield call([res, 'json'])\n\n    const filtered = filterGenes(geneJson)\n\n    console.log('MyGene: ', geneJson)\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        ndex: json,\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: query,\n        error: e.message\n      }\n    })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n)\n\nsagaMiddleware.run(rootSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router>\n      <Route path=\"/\" component={App} />\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n// if (module.hot) {\n//   module.hot.accept('./App', () => {\n//     const NextApp = require('./App').default\n//     ReactDOM.render(\n//       <Provider store={store}>\n//         <NextApp />\n//       </Provider>,\n//       document.getElementById('root')\n//     )\n//   })\n//\n//   module.hot.accept('./reducers', () => {\n//     const nextRootReducer = require('./reducers').default\n//     store.replaceReducer(nextRootReducer)\n//   })\n// }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}